// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eMuOnline.Data;

#nullable disable

namespace eMuOnline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230504203830_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eMuOnline.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("DescripcionCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("eMuOnline.Models.ItemProducto", b =>
                {
                    b.Property<int>("IdItemProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemProducto"));

                    b.Property<string>("DescripcionItemProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateItem")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("ImagenItemProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreItemProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioItemProducto")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDateItem")
                        .HasColumnType("datetime2");

                    b.HasKey("IdItemProducto");

                    b.HasIndex("IdCategoria");

                    b.ToTable("ItemProductos");
                });

            modelBuilder.Entity("eMuOnline.Models.ItemProducto_Personaje", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("int");

                    b.Property<int>("IdItemProducto")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaje", "IdItemProducto");

                    b.HasIndex("IdItemProducto");

                    b.ToTable("ItemProductos_Personajes");
                });

            modelBuilder.Entity("eMuOnline.Models.Personaje", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaje"));

                    b.Property<string>("BiografiaPersonaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenURLPersonaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCortoPersonaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFullPersonaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersonaje");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("eMuOnline.Models.ItemProducto", b =>
                {
                    b.HasOne("eMuOnline.Models.Categoria", "Categoria")
                        .WithMany("ItemProductos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("eMuOnline.Models.ItemProducto_Personaje", b =>
                {
                    b.HasOne("eMuOnline.Models.ItemProducto", "ItemProducto")
                        .WithMany("ItemProductos_Personajes")
                        .HasForeignKey("IdItemProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eMuOnline.Models.Personaje", "Personaje")
                        .WithMany("ItemProductos_Personajes")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemProducto");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("eMuOnline.Models.Categoria", b =>
                {
                    b.Navigation("ItemProductos");
                });

            modelBuilder.Entity("eMuOnline.Models.ItemProducto", b =>
                {
                    b.Navigation("ItemProductos_Personajes");
                });

            modelBuilder.Entity("eMuOnline.Models.Personaje", b =>
                {
                    b.Navigation("ItemProductos_Personajes");
                });
#pragma warning restore 612, 618
        }
    }
}
